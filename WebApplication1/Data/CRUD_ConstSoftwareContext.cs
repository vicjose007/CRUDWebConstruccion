// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WebApplication1.Entities;

namespace WebApplication1.Data
{
    public partial class CRUD_ConstSoftwareContext : DbContext
    {
        public CRUD_ConstSoftwareContext()
        {
        }

        public CRUD_ConstSoftwareContext(DbContextOptions<CRUD_ConstSoftwareContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ClientType> ClientType { get; set; }
        public virtual DbSet<ContactType> ContactType { get; set; }
        public virtual DbSet<People> People { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClientType>(entity =>
            {
                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ContactType>(entity =>
            {
                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<People>(entity =>
            {
                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.SupportStaff)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.HasOne(d => d.ClientType)
                    .WithMany(p => p.People)
                    .HasForeignKey(d => d.ClientTypeId)
                    .HasConstraintName("FK_People_ClientType");

                entity.HasOne(d => d.ContactType)
                    .WithMany(p => p.People)
                    .HasForeignKey(d => d.ContactTypeId)
                    .HasConstraintName("FK_People_ContactType");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}